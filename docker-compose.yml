services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: traininginsights
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [ti]

  backend:
    build:
      context: ./traininginsights-backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: traininginsights
      DB_USER: postgres
      DB_PASS: postgres
      TI_JWT_SECRET: "change-this-to-a-long-secret-or-base64"
      SPRING_PROFILES_ACTIVE: docker
      # Explicit uploads dir inside container; persist via volume below
      APP_UPLOADS_DIR: /opt/app/uploads
      APP_ATTACHMENTS_MAX_MB: 25
      APP_PUBLIC_ENV: local
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    expose:
      - "8080"   # Internal only
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ti]
    volumes:
      - uploads:/opt/app/uploads

  frontend:
    build:
      context: ./traininginsights-frontend
    environment:
      VITE_API_BASE: /api
    depends_on:
      - backend
    ports:
      - "3000:80"
    expose:
      - "80"     # Serve frontend on container port 80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ti]

volumes:
  pgdata:
  uploads:

networks:
  ti: